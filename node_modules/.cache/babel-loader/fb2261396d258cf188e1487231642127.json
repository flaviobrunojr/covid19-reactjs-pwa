{"ast":null,"code":"import React,{memo}from'react';import RefreshIcon from\"assets/images/refresh.svg\";import{Card,Typography,Button,Select,MenuItem}from'components';import COUNTRIES from'commons/constants/countries';import{CardPanelContentStyled,ItemStyled}from'./style';var navigatorHasShare=navigator.share;function Panel(_ref){var updatedAt=_ref.updatedAt,onChange=_ref.onChange,data=_ref.data,country=_ref.country,getCovidData=_ref.getCovidData;var cases=data.cases,recovered=data.recovered,deaths=data.deaths,todayCases=data.todayCases,todayDeaths=data.todayDeaths;var renderCountries=function renderCountries(country,index){return/*#__PURE__*/React.createElement(MenuItem,{key:\"country-\".concat(index),value:country.value},/*#__PURE__*/React.createElement(ItemStyled,null,/*#__PURE__*/React.createElement(\"div\",null,country.label),/*#__PURE__*/React.createElement(\"img\",{src:country.flag,alt:\"Pa\\xEDs-\".concat(country.label)})));};var textCovid19=\"Pa\\xEDs: \".concat(country,\" - Dados atualizados em \").concat(updatedAt,\" - Hoje - Casos: \").concat(todayCases,\". \\xD3bitos: \").concat(todayDeaths,\". Total - Casos: \").concat(cases,\". \\xD3bitos: \").concat(deaths,\". Recuperados: \").concat(recovered);var shareInfo=function shareInfo(){navigator.share({title:\"Dados do Covid19 - \".concat(country),text:textCovid19,url:'https://covid19pwa.netlify.app/'});};var copyInfo=function copyInfo(){navigator.clipboard.writeText(textCovid19);};var renderShareButton=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:shareInfo},\"Compartilhar\"));var renderCopyButton=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:copyInfo},\"Copiar\"));return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardPanelContentStyled,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",component:\"span\",color:\"primary\"},\"COVID19\"),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",component:\"p\"},\"Painel Coronav\\xEDrus\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:\"span\",color:\"secondary\"},\"Atualizado em: \",updatedAt),/*#__PURE__*/React.createElement(\"img\",{src:RefreshIcon,alt:\"Atualizar\",onClick:function onClick(){return getCovidData(country);},className:\"cursor\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"pt-2\"},/*#__PURE__*/React.createElement(Select,{onChange:onChange,value:country},COUNTRIES.map(renderCountries)))),navigatorHasShare?renderShareButton:renderCopyButton));}export default memo(Panel);","map":{"version":3,"sources":["/home/flavio/covid19-pwa/src/containers/Main/components/Panel.jsx"],"names":["React","memo","Card","Typography","Button","Select","MenuItem","COUNTRIES","CardPanelContentStyled","ItemStyled","navigatorHasShare","navigator","share","Panel","updatedAt","onChange","data","country","getCovidData","cases","recovered","deaths","todayCases","todayDeaths","renderCountries","index","value","label","flag","textCovid19","shareInfo","title","text","url","copyInfo","clipboard","writeText","renderShareButton","renderCopyButton","RefreshIcon","map"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport RefreshIcon from 'assets/images/refresh.svg'\nimport { Card, Typography, Button, Select, MenuItem } from 'components'\nimport COUNTRIES from 'commons/constants/countries'\nimport { CardPanelContentStyled, ItemStyled } from './style'\n\nconst navigatorHasShare = navigator.share\n\nfunction Panel({ updatedAt, onChange, data, country, getCovidData }) {\n  const { cases, recovered, deaths, todayCases, todayDeaths } = data\n\n  const renderCountries = (country, index) => (\n    <MenuItem key={`country-${index}`} value={country.value}>\n      <ItemStyled>\n        <div>{country.label}</div>\n        <img src={country.flag} alt={`País-${country.label}`} />\n      </ItemStyled>\n    </MenuItem>\n  )\n\n  const textCovid19 = `País: ${country} - Dados atualizados em ${updatedAt} - Hoje - Casos: ${todayCases}. Óbitos: ${todayDeaths}. Total - Casos: ${cases}. Óbitos: ${deaths}. Recuperados: ${recovered}`\n\n  const shareInfo = () => {\n    navigator.share({\n      title: `Dados do Covid19 - ${country}`,\n      text: textCovid19,\n      url: 'https://covid19pwa.netlify.app/',\n    })\n  }\n\n  const copyInfo = () => {\n    navigator.clipboard.writeText(textCovid19);\n\n  }\n\n  const renderShareButton = (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={shareInfo}>\n        Compartilhar\n      </Button>\n    </div>\n  )\n\n  const renderCopyButton = (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={copyInfo}>\n        Copiar\n      </Button>\n    </div>\n  )\n\n  return (\n    <Card>\n      <CardPanelContentStyled>\n        <div>\n          <Typography variant=\"h5\" component=\"span\" color=\"primary\">COVID19</Typography>\n          <Typography variant=\"h6\" component=\"p\">Painel Coronavírus</Typography>\n          <Typography variant=\"body2\" component=\"span\" color=\"secondary\">Atualizado em: {updatedAt}</Typography>\n          <img src={RefreshIcon} alt=\"Atualizar\" onClick={() => getCovidData(country)} className=\"cursor\" />\n          <div className=\"pt-2\">\n            <Select onChange={onChange} value={country}>\n              {COUNTRIES.map(renderCountries)}\n            </Select>\n          </div>\n        </div>\n        {navigatorHasShare ? renderShareButton : renderCopyButton}\n      </CardPanelContentStyled>\n    </Card>\n  )\n}\n\nPanel.propTypes = {\n  data: PropTypes.object.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default memo(Panel)\n"]},"metadata":{},"sourceType":"module"}